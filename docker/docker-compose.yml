version: '3.8'

services:
  postgres:
    container_name: "postgres"
    build:
      context: ../
      dockerfile: docker/db.Dockerfile
    env_file:
      - app-variables.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    restart: always
    ports:
      - "5432:5432"
    networks:
      - league-net
  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      #      change 172.20.10.3 to YOUR IP or DOMAIN
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://172.20.10.3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
    depends_on:
      - zookeeper
    volumes:
      - ./:/etc/kafka

#  league-core:
#    container_name: league-core
#    build:
#      context: ../
#      dockerfile: docker/app.Dockerfile
#    env_file:
#      - app-variables.env
#    ports:
#      - "7701:7701"
#    networks:
#      - league-net
#    restart: always
#    depends_on:
#      - postgres
volumes:
  postgres: { }

networks:
  league-net:
    driver: bridge
