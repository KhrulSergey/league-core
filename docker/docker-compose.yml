version: '3.8'

services:
  postgres:
    container_name: "postgres"
    build:
      context: ../
      dockerfile: docker/db.Dockerfile
    env_file:
      - app-variables.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    restart: always
    ports:
      - "5432:5432"
    networks:
      - league-net
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=localhost
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - league-net

  #  kafdrop:
  #    container_name: kafdrop
  #    image: obsidiandynamics/kafdrop
  #    restart: "no"
  #    ports:
  #      - "9000:9000"
  #    environment:
  #      KAFKA_BROKERCONNECT: "kafka:9093"
  #      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
  #    depends_on:
  #      - kafka

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    restart: always
    networks:
      - league-net
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    expose:
      - "9093"
    restart: always
    links:
      - zookeeper
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      #      change 172.20.10.3 to YOUR LOCAL IP or DOMAIN
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://172.20.10.3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "NOTIFICATION:1:1"
    networks:
      - league-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  league-core:
    container_name: league-core
    restart: unless-stopped
    build:
      context: ../
      dockerfile: docker/app.Dockerfile
    env_file:
      - app-variables.env
    ports:
      - "7701:7701"
    networks:
      - league-net
    depends_on:
      - postgres
      - kafka
volumes:
  postgres: { }

networks:
  league-net:
    driver: bridge
